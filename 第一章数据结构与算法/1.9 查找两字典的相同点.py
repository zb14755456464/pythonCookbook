# 问题
# 怎样在两个字典中寻找相同点（比如相同的键、相同的值等等）

# 解决方案
# 考虑下面的两个字典
a = {
    'x' : 1,
    'y' : 2,
    'z' : 3
}

b = {
    'w' : 10,
    'x' : 11,
    'y' : 2
}

# 为了寻找两个字典的相同点，可以简单的在两字典的 keys() 或者 items() 方法返回结果上执行集合操作

# 1 查找字典a和b中共同的键,可以使用集合的交集
print(a.keys() & b.keys())

# 2 查找字典a和字典b中的公共键值对
print(a.items()&b.items())

# 3 查找在字典a中的key但不在字典b中
print(a.keys()-b.keys())

c = {key:a[key] for key in a.keys()-{'z','w'}}
# c is {'x': 1, 'y': 2}

"""
重点：键视图的一个很少被了解的特性就是它们也支持集合操作，比如集合并、交、差运算。
如果你想对集合的键执行一些普通的集合操作，可以直接使用键视图对象而不用先将它们转换成一个 set.


字典的 items() 方法返回一个包含 (键，值) 对的元素视图对象。 这个对象同样也支持集合操作，
并且可以被用来查找两个字典有哪些相同的键值对

注意字典的 values() 不支持，不过，如果你硬要在值上面执行这些集合操作的话，你可以先将值集合转换成 set
"""